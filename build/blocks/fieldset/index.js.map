{"version":3,"file":"blocks/fieldset/index.js","mappings":"mCAAAA,EAAOC,QAAUC,OAAW,GAAe,W,kCCA3C,MAAM,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAc,W,6BCU/C,SAASC,EAAIC,GAA6C,IAAzCC,EAAUD,EAAVC,WAAYC,EAASF,EAATE,UAAWC,EAAaH,EAAbG,cAChDC,GAAaC,EAAAA,EAAAA,iBAEnBC,GAA0CC,EAAAA,EAAAA,qBAAqBH,EAAY,CAC1EI,cAAc,IADPC,EAAQH,EAARG,SAAaC,E,6WAAgBC,CAAAL,EAAAM,GAIrC,OACCC,MAAAC,cAAA,WAAeJ,EACdG,MAAAC,cAACC,EAAAA,kBAAiB,KACjBF,MAAAC,cAACE,EAAAA,UAAS,CACTC,OAAQC,EAAAA,EAAAA,IAAI,UAAW,aACvBC,aAAc,GAEdN,MAAAC,cAACM,EAAAA,cAAa,CACbC,OAAQH,EAAAA,EAAAA,IAAI,cAAe,aAC3BI,QAAUrB,EAAWsB,WACrBC,SAAW,SAAEC,GAAM,OAClBtB,EAAe,CAAEoB,WAAYE,GAAU,EAExCC,yBAAuB,MAIxBzB,EAAWsB,YACZV,MAAAC,cAACa,EAAAA,SAAQ,CACRC,QAAQ,SACR1B,UAAYA,EACZ2B,MAAQ5B,EAAW6B,OACnBN,SAAW,SAAEM,GAAM,OAAM3B,EAAe,CAAE2B,OAAAA,GAAU,EACpDC,aAAcb,EAAAA,EAAAA,IAAI,gBAAiB,aACnCc,eAAiB,KAIjBvB,EAGL,C,GC/CIwB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAavC,QAGrB,IAAID,EAASqC,EAAyBE,GAAY,CAGjDtC,QAAS,CAAC,GAOX,OAHAyC,EAAoBH,GAAUvC,EAAQA,EAAOC,QAASqC,GAG/CtC,EAAOC,OACf,CCrBAqC,EAAoBK,EAAI,CAAC1C,EAAS2C,KACjC,IAAI,IAAIC,KAAOD,EACXN,EAAoBQ,EAAEF,EAAYC,KAASP,EAAoBQ,EAAE7C,EAAS4C,IAC5EE,OAAOC,eAAe/C,EAAS4C,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EP,EAAoBQ,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCAlF,MAAM,EAA+BlD,OAAW,GAAU,O,umCCY1DsD,EAAAA,EAAAA,mBAAmBC,EAAU,CAK5BC,UAAMC,EAENC,WAAY,CACXC,KAAM,CACL,CACCC,KAAM,QACNC,OAAQ,CAAE,cACVC,UAAW,SAAEC,EAAOpD,GACnB,OAAOqD,EAAAA,EAAAA,aAAa,qBAAsB,CAAC,EAAGrD,EAC/C,KAQHsD,KAAMhE,EAAAA,EAKNiE,KCrCc,SAAahE,GAAmB,IAAfC,EAAUD,EAAVC,WACzBC,EAAYD,EAAWgE,WAAa,iBAAc5B,EAClDjC,EAAaC,EAAAA,cAAc2D,KAAM,CACtC9D,UAAAA,IAED,OACCW,MAAAC,cAAA,WAAeV,EACZH,EAAWsB,YAAcV,MAAAC,cAAA,cAAUb,EAAW6B,QAChDjB,MAAAC,cAACoD,EAAAA,YAAYC,QAAO,MAGvB,G","sources":["webpack://formiflex/external window [\"wp\",\"blockEditor\"]","webpack://formiflex/external window [\"wp\",\"i18n\"]","webpack://formiflex/external window [\"wp\",\"components\"]","webpack://formiflex/./src/blocks/fieldset/edit.js","webpack://formiflex/webpack/bootstrap","webpack://formiflex/webpack/runtime/define property getters","webpack://formiflex/webpack/runtime/hasOwnProperty shorthand","webpack://formiflex/external window [\"wp\",\"blocks\"]","webpack://formiflex/./src/blocks/fieldset/index.js","webpack://formiflex/./src/blocks/fieldset/save.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","import { __ } from '@wordpress/i18n';\n\nimport { ToggleControl, PanelBody } from '@wordpress/components';\nimport {\n\tInspectorControls,\n\tRichText,\n\tuseInnerBlocksProps,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\n\nexport default function Edit( { attributes, className, setAttributes } ) {\n\tconst blockProps = useBlockProps();\n\n\tconst { children, ...innerBlocksProps } = useInnerBlocksProps( blockProps, {\n\t\ttemplateLock: false,\n\t} );\n\n\treturn (\n\t\t<fieldset { ...innerBlocksProps }>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody\n\t\t\t\t\ttitle={ __( 'Options', 'formiflex' ) }\n\t\t\t\t\tinitialOpen={ true }\n\t\t\t\t>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ __( 'Show Legend', 'formiflex' ) }\n\t\t\t\t\t\tchecked={ attributes.showLegend }\n\t\t\t\t\t\tonChange={ ( newval ) =>\n\t\t\t\t\t\t\tsetAttributes( { showLegend: newval } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t{ attributes.showLegend && (\n\t\t\t\t<RichText\n\t\t\t\t\ttagName=\"legend\"\n\t\t\t\t\tclassName={ className }\n\t\t\t\t\tvalue={ attributes.legend }\n\t\t\t\t\tonChange={ ( legend ) => setAttributes( { legend } ) }\n\t\t\t\t\tplaceholder={ __( 'Enter legend…', 'formiflex' ) }\n\t\t\t\t\tallowedFormats={ [] }\n\t\t\t\t/>\n\t\t\t) }\n\n\t\t\t{ children }\n\t\t</fieldset>\n\t);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","import { registerBlockType, createBlock } from '@wordpress/blocks';\n\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\nimport { Fieldset } from '../../icons/icons';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType( metadata, {\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\n\t */\n\ticon: Fieldset,\n\n\ttransforms: {\n\t\tfrom: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/group' ],\n\t\t\t\ttransform: ( attrs, children ) => {\n\t\t\t\t\treturn createBlock( 'formiflex/fieldset', {}, children );\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n} );\n","import { InnerBlocks, useBlockProps } from '@wordpress/block-editor';\n\nexport default function save( { attributes } ) {\n\tconst className = attributes.hideBorder ? 'no-border' : undefined;\n\tconst blockProps = useBlockProps.save( {\n\t\tclassName,\n\t} );\n\treturn (\n\t\t<fieldset { ...blockProps }>\n\t\t\t{ attributes.showLegend && <legend>{ attributes.legend }</legend> }\n\t\t\t<InnerBlocks.Content />\n\t\t</fieldset>\n\t);\n}\n"],"names":["module","exports","window","Edit","_ref","attributes","className","setAttributes","blockProps","useBlockProps","_useInnerBlocksProps","useInnerBlocksProps","templateLock","children","innerBlocksProps","_objectWithoutProperties","_excluded","React","createElement","InspectorControls","PanelBody","title","__","initialOpen","ToggleControl","label","checked","showLegend","onChange","newval","__nextHasNoMarginBottom","RichText","tagName","value","legend","placeholder","allowedFormats","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","registerBlockType","metadata","icon","Fieldset","transforms","from","type","blocks","transform","attrs","createBlock","edit","save","hideBorder","InnerBlocks","Content"],"sourceRoot":""}